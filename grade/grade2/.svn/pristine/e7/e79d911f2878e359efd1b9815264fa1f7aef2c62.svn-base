package tsc.nsfocus.action;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import tsc.nsfocus.bean.FlagBean;
import tsc.nsfocus.bean.GradeBean;
import tsc.nsfocus.bean.UserBean;
import tsc.nsfocus.service.FlagService;
import tsc.nsfocus.service.GradeService;
import tsc.nsfocus.service.UserService;
import tsc.nsfocus.util.MyTools;

public class UserAction extends HttpServlet{
	
	private static final long serialVersionUID = 1L;
	private UserService userService;
	private String forward="main.jsp";
	private String message="";
	HttpSession session;
	public void init() throws ServletException{
		userService = new UserService();
		super.init();
	}
	
	public void doGet(HttpServletRequest request,HttpServletResponse response) throws ServletException,IOException{
		session = request.getSession();
		String action = request.getParameter("a");
		GradeBean grade = new GradeBean();
		GradeService gradeService = new GradeService();
		UserBean user = ((UserBean)session.getAttribute("team"));
		if(user==null)
//			doLogin(request);
			forward="index.jsp";
		if("logout".equals(action))
			doLogout(request);
		else{
			
			grade.setTeamid(user.getTeamid());
			if("addfile".equals(action))
				doUpload(request, grade);
			if("addflag".equals(action)){
				String flagMd5=request.getParameter("flag");
				setFlagId(grade, flagMd5);
			}
			gradeService.addGrade(grade);
		}
		
		session.setAttribute("message", message);
		response.sendRedirect(forward);
//		RequestDispatcher rd = request.getRequestDispatcher(forward);
//		rd.forward(request, response);
	}
	
	public void doPost(HttpServletRequest request,HttpServletResponse response) throws ServletException,IOException{
		doGet(request,response);
	}
	
	private void doLogin(HttpServletRequest request) throws ServletException{
		
		int rand = Integer.parseInt(request.getParameter("rand"));
		if(session.getAttribute("rand")==null||Integer.parseInt(session.getAttribute("rand").toString())!=rand)
		{
			forward="./user.jsp";
			message = "验证码错误！";
			return;
		}
		String username = request.getParameter("username");
		String password = request.getParameter("password");
		UserBean user = userService.getUser(username, password);
		
		if(user==null){
			forward="./user.jsp";
			message = "用户名或密码错误！";
		}
		else{
			forward="./main.jsp";
			session.setAttribute("team", user);
		}
	}
	
	
	public void doUpload(HttpServletRequest request,GradeBean grade) throws ServletException,IOException{
		forward="main.jsp";
		request.setCharacterEncoding("utf-8");	//设置编码
		
		//获得磁盘文件条目工厂
		DiskFileItemFactory factory = new DiskFileItemFactory();
		//获取文件需要上传到的路径
		String path = "D:/upload";
		String tm = grade.getTeamid().toString();
		//string类型是否可以直接相加来组合
		path=path+"/"+tm;
		factory.setRepository(new File(path));
		//设置 缓存的大小，当上传文件的容量超过该缓存时，直接放到 暂时存储室
		factory.setSizeThreshold(1024*1024) ;
		
		//高水平的API文件上传处理
		ServletFileUpload upload = new ServletFileUpload(factory);
		String filename = null;
		
		try {
			//可以上传多个文件
			List<FileItem> list = (List<FileItem>)upload.parseRequest(request);
			
			for(FileItem item : list)
			{
				if(!item.isFormField())
				{
					/**
					 * 以下三步，主要获取 上传文件的名字
					 */
					//获取路径名
					String value = item.getName() ;
					//索引到最后一个反斜杠
					int start = value.lastIndexOf("\\");
					//截取 上传文件的 字符串名字，加1是 去掉反斜杠，
					 filename= value.substring(start+1);
					File temp = new File(path);
					if(!temp.exists())
						temp.mkdir();
					item.write( new File(path,filename) );//第三方提供的
					
				}
			}
			File file = new File(path+"\\"+filename);
			grade.setPath(file.getPath());
			setFlagId(grade,MyTools.getFileMD5(file));
			
		} catch (FileUploadException e) {
			e.printStackTrace();
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**
	 * 根据flag的md5设置grade的flagid信息
	 * @param grade
	 * @param flagmd5
	 */
	public void setFlagId(GradeBean grade,String flagmd5){
		FlagService flagService = new FlagService();
		FlagBean flagBean = flagService.getByName(flagmd5);
		if(flagBean!=null){
			grade.setFlagid(flagBean.getId());
		}else
			grade.setFlagid(0);
	}
	public void doLogout(HttpServletRequest request) throws ServletException{
		HttpSession session =	request.getSession();
		if(session.getAttribute("team")!=null)
			session.setAttribute("team", null);
		forward="index.jsp";
	}
}
